@page "/reservations"
@using Assignment2.Data
@inject ReservationManager reservationManager

@* RESERVATIONS *@
<div id="reservsTop" class="flex">
    <div id="reservations" class="flex">
        <div id="reservsTableHeader" class="flex">
            <h3>Reservations</h3>
        </div>
        <div id="reservsTable" class="flex">
            <table class="table">
                <thead>
                    <tr>
                        <th>Code</th>
                        <th>Flight</th>
                        <th>Airline</th>
                        <th>Cost</th>
                        <th>Name</th>
                        <th>Citizenship</th>
                        <th>Status</th>
                        <th>Edit</th>
                    </tr>
                </thead>
                <tbody class="ft-body">
                    @*@foreach (var flight in flights) //@flight.code, @flight.airline etc.
                    {*@
                    @foreach (var reservation in rList)
                    {
                        <tr>
                            <td>@reservation.Code</td>
                            <td>@reservation.Flight</td>
                            <td>@reservation.Airline</td>
                            <td>@reservation.Cost</td>
                            <td>@reservation.Name</td>
                            <td>@reservation.Citizenship</td>
                            <td>@reservation.Status</td>
                            <td><button type="submit" @onclick="@select_button">Edit</button></td>
                        </tr>
                    }
                    @*}*@
                </tbody>
            </table>
        </div>
    </div>

    @* RESERVE *@
    <div id="reserve" class="flex">
        <div id="reserveHeader" class="flex">
            <h3>Reserve</h3>
        </div>
        <div class="flex">
            <label for="code" class="res-lcol">Code:</label>
            <input type="text" class="res-rcol" @bind="currentCode" />
        </div>
        <div class="flex">
            <label for="flight" class="res-lcol">Flight:</label>
            <input type="text" class="res-rcol" @bind="currentFlight" />
        </div>
        <div class="flex">
            <label for="airline" class="res-lcol">Airline:</label>
            <input type="text" class="res-rcol" @bind="currentAirline" />
        </div>
        <div class="flex">
            <label for="cost" class="res-lcol">Cost:</label>
            <input type="text" class="res-rcol" @bind="currentCost" />
        </div>
        <div class="flex">
            <label for="name" class="res-lcol">Name:</label>
            <input type="text" class="res-rcol" @bind="currentName" placeholder="@currentName" />
        </div>

        <div class="flex">
            <label for="citizen" class="res-lcol">Citizenship:</label>
            <input type="text" class="res-rcol" @bind="currentCit" />
        </div>

        <div class="flex">
            <label for="status" class="res-lcol">Status:</label>
            <select class="res-rcol" @bind="currentStatus">
                <option>Active</option>
                <option>Inactive</option>
            </select>
        </div>

        <div>
            <button type="submit" class="btn btn-default" @onclick="@addRes">Reserve</button>
            <button type="submit" class="btn btn-default">Update</button>
        </div>
    </div>


    @* SEARCH *@

    <div id="resFinder" class="flex">
        <div id="resFinderHeader" class="flex">
            <h3>Search</h3>
        </div>

        @*text input for 'CODE'*@
        <div class="flex">
            <label for="code" class="res-lcol">Code:</label>
            <input type="text" class="form-control" @bind="@codeInput"/>
        </div>

        @*text input for 'AIRLINE'*@
        <div class="flex">
            <label for="airline" class="res-lcol">Airline:</label>
            <input type="text" class="form-control" @bind="@airlineInput"/>
        </div>

        @*text input for 'NAME'*@
        <div class="flex">
            <label for="name" class="res-lcol">Name:</label>
            <input type="text" class="form-control" @bind="@nameInput"/>
        </div>

        <button type="submit" class="btn btn-default rf-btn" @onclick="@Find_Res">Find Reservations</button>
        <button type="submit" class="btn btn-default rf-btn" @onclick="@Find_Reset">Reset</button>
    </div>

</div>




@code {
    List<Reservation> rList = ReservationManager.GetReservations();
    public string codeInput = "";
    public string airlineInput = "";
    public string nameInput = "";

    public string message = "Please fill all fields";

    public string currentCode = "";
    public string currentFlight = "";
    public string currentAirline = "";
    public string currentCost = "";
    public string currentName = "";
    public string currentCit = "";
    public string currentStatus = "";

    public string tableCode = "";

    public string resInput { get; set; }

    public async void addRes()
    {
        await base.OnInitializedAsync();
        //If one of the input fields is empty 
        if ((currentCode == "") || (currentFlight == "") || (currentAirline == "") || (currentCost == "") || (currentName == "") || (currentCit == ""))
        {
            //Do nothing
        }
        else
        {
            //creating res object
            rList.Add(ReservationManager.createRes(currentCode, currentFlight, currentAirline, currentCost, currentName, currentCit, currentStatus));
        }

        //Clearing input fields 
        currentCode = "";
        currentFlight = "";
        currentAirline = "";
        currentCost = "";
        currentName = "";
        currentCit = "";
        currentStatus = "";
    }


    protected async void Find_Res()
    {
        await base.OnInitializedAsync();
        rList = ReservationManager.revertList();

        await base.OnInitializedAsync();
        rList = ReservationManager.findResByCode(rList, codeInput);

        if (codeInput != "")
        {
            await base.OnInitializedAsync();
            rList = ReservationManager.findResByCode(rList, codeInput);
        }

        if (airlineInput != "")
        {
            await base.OnInitializedAsync();
            rList = ReservationManager.findResByCode(rList, airlineInput);
        }

        if (nameInput != "")
        {
            await base.OnInitializedAsync();
            rList = ReservationManager.findResByCode(rList, nameInput);
        }

        //If all fields are blank 
        if ((codeInput == "") && (airlineInput == "") && (nameInput == ""))
        {
            await base.OnInitializedAsync();
            rList = ReservationManager.revertList();
        }

        //Clear fields afterwards
        codeInput = "";
        airlineInput = "";
        nameInput = "";

    }

    protected async void Find_Reset()
    {
        await base.OnInitializedAsync();
        rList = ReservationManager.revertList();
    }

    protected async void select_button()
    {
        await base.OnInitializedAsync();

        //editing the selected reservation

        currentCode = "";
        currentFlight = "";
        currentAirline = "";
        currentCost = "";
        currentName = "";
        currentCit = "";
        currentStatus = "";
        
    }
}
